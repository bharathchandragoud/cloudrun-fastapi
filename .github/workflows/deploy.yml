name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ai-service
  REGION: us-central1
  DB_INSTANCE: neuro-ai-postgres-instance
  DB_NAME: neuro_asset_db
  DB_USER: Aidevgroup@321
  BUCKET_NAME: neuro-ai-assets-bucket

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Build Docker image
        run: |
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:latest .

      - name: Push Docker image to GCR
        run: |
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --add-cloudsql-instances=$PROJECT_ID:$REGION:$DB_INSTANCE \
            --set-env-vars="DATABASE_URL=postgresql://$DB_USER:${{ secrets.DB_PASSWORD }}@/$DB_NAME?host=/cloudsql/$PROJECT_ID:$REGION:$DB_INSTANCE,BUCKET_NAME=$BUCKET_NAME" \
            --memory 2Gi \
            --cpu 2 \
            --timeout 300 \
            --max-instances 10

      - name: Show Service URL
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME \
            --region $REGION \
            --format='value(status.url)')
          echo "âœ… Deployed successfully!"
          echo "ðŸ”— Service URL: $SERVICE_URL"
